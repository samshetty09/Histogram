import cv2
import numpy as np
import matplotlib.pyplot as plt
# Load the image in grayscale mode
image = cv2.imread('D:/ODDSEM/OSTT/Screenshot.png', 0)
# Plot original image and its histogram
plt.figure(figsize=(12, 5))
# Display Original Image
plt.subplot(1, 2, 1)
plt.imshow(image, cmap='gray')
plt.title('Original Image')
plt.axis('off')
# Display Histogram of Original Image
plt.subplot(1, 2, 2)
plt.hist(image.ravel(), 256, [0, 256])
plt.title('Histogram of Original image')
plt.show()

2)code 2 histogram
import cv2
import numpy as np
import matplotlib.pyplot as plt
# Load the original grayscale image
original_image = cv2.imread('D:/ODDSEM/OSTT/Screenshot.png', 0)
# Apply histogram equalization
equalized_image = cv2.equalizeHist(original_image)
# Function to calculate RMS contrast
def calculate_rms_contrast(image):
mean_intensity = np.mean(image)
contrast = np.sqrt(np.mean((image - mean_intensity) ** 2))
return contrast
# Calculate RMS contrast for both images
original_contrast = calculate_rms_contrast(original_image)
equalized_contrast = calculate_rms_contrast(equalized_image)
# Display images and their histograms
plt.figure(figsize=(15, 10))
# Original image and its histogram
plt.subplot(2, 2, 1)
plt.imshow(original_image, cmap='gray')
plt.title('Original Image')
plt.axis('off')
plt.subplot(2, 2, 2)
plt.hist(original_image.ravel(), 256, [0, 256])
plt.title('Histogram of Original Image')
# Equalized image and its histogram
plt.subplot(2, 2, 3)
plt.imshow(equalized_image, cmap='gray')
plt.title('Equalized Image')
plt.axis('off')
plt.subplot(2, 2, 4)
plt.hist(equalized_image.ravel(), 256, [0, 256])
plt.title('Histogram of Equalized Image')
plt.show()
# Display RMS contrast values
print(f"RMS Contrast of Original Image: {original_contrast}")
print(f"RMS Contrast of Equalized Image: {equalized_contrast}")
